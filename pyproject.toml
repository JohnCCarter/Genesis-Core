[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "genesis-core"
version = "0.7.0"
description = "Fibonacci Fraktal Exits implementation with symmetric exit logic and frozen context support"
requires-python = ">=3.11"
dependencies = [
  "fastapi>=0.116,<0.117",
  "uvicorn>=0.24,<0.25",
  "httpx>=0.25,<0.26",
  "websockets>=12,<13",
  "pydantic>=2.7,<3",
  "pydantic-settings>=2,<3",
  "python-dotenv>=1,<2",
  "jsonschema>=4.20,<5"
]

[project.optional-dependencies]
dev = [
  "black>=24.10",
  "ruff>=0.6",
  "pytest>=8",
  "pytest-asyncio>=0.23,<1",
  "bandit>=1.7",
  "pre-commit>=3.0",
  "detect-secrets>=1.5"
]
ml = [
  "scikit-learn>=1.3.0",
  "pandas>=2.0.0",
  "pyarrow>=13.0.0",
  "matplotlib>=3.7.0",
  "seaborn>=0.12.0",
  "tqdm>=4.65.0",
  "numba>=0.62.0",
  "scipy>=1.11.0"
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["core*"]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.black]
line-length = 100
target-version = ['py311']

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test

[tool.pytest.ini_options]
addopts = "-q"
pythonpath = ["src"]
testpaths = ["tests"]
norecursedirs = ["scripts", "cache", "data", "results", "logs"]
