name: CI

on:
  push:
    branches: ["master, Phase-2, phase-3, phase-4, phase-5, Phase-6, phase-7"]
  pull_request:
    branches: ["master, Phase-2, phase-3, phase-4, phase-5, Phase-6, phase-7"]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install .[dev,ml]

      - name: Ruff
        run: ruff check .

      - name: Black (check)
        run: black --check .

      - name: Pytest
        run: pytest -q

      - name: Bandit (src + scripts)
        run: bandit -r src scripts -f txt -o bandit-report.txt
        continue-on-error: true

      - name: Upload Bandit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.txt
name: CI

on:
  push:
    branches: [master, Phase-2, phase-3, phase-4, phase-5, Phase-6, phase-7]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SYMBOL_MODE: synthetic
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install -e .[dev]
      - name: Install ML dependencies
        run: |
          . .venv/bin/activate
          pip install -e .[ml]
      - name: Lint & Test & Security
        run: |
          . .venv/bin/activate
          # Code formatting
          python -m black --check src scripts tests --exclude "scripts/archive"
          # Linting
          python -m ruff check src scripts tests --exclude scripts/archive
          # Security scanning
          python -m bandit -r src -f json -o bandit-report.json
          # Run tests
          python -m pytest --tb=short -q
